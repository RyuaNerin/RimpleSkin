<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <style>
        * {
            font-family: "돋움";
            font-size: 12px;
        }
        body, html {
            margin: 0;
        }

        html {
            background-position: bottom right;
            background-repeat: no-repeat;
            box-sizing: border-box;
            height: 100%;
            overflow-x: hidden;
            background-color: rgba(0,0,0,0);
        }

        body {
            overflow:hidden;
			/*
            background-image: url(./images/handle.png);
            background-position: bottom right;
            background-repeat: no-repeat;
			*/
        }

        .encounter {
            color: #DED7BE;
            text-shadow: -1px 0 2px #795516, 0 1px 2px #795516, 1px 0 2px #795516, 0 -1px 2px #795516;
            font-weight: 300;
            white-space: nowrap;
        }

        #encDistance {
            color: #FFbb00;
            text-shadow: -1px 0 3px #151515, 0 1px 3px #151515, 1px 0 3px #151515, 0 -1px 3px #151515;
            overflow: hidden;
            font-weight: 600;
            white-space: nowrap;
            text-overflow: ellipsis;
            font-family: 'consolas';
            font-size: 16px;
        }

        #combatantTable {
            width: 100%;
            table-layout: fixed;
            border-collapse: collapse;
            padding: 0px;
        }

        #combatantTableBody {
            color: #FFFFFF;
            text-shadow: 1px 1px 0px #353535, -1px 0 2px #353535, 0 1px 2px #353535, 1px 0 2px #353535, 0 -1px 2px #353535;
            font-weight: normal;
            white-space: nowrap;
            text-overflow: clip;
            overflow: hidden;
        }

        #combatantTableBody tr {
            line-height: 20px;
            text-align: center;
            border-bottom: 1px solid rgba(0,0,0,0.2);
        }

        #combatantTableBody td {
            padding: 0 1 0 0;
        }

        .jobIcon {
            width:  16px;
            height: 16px;
        }
    </style>
    <script>
        var BarColors = {
            "gld": "#a8bcc2",
            "pld": "#a8bcc2",

            "mrd": "#e32e28",
            "war": "#e32e28",

            "drk": "#a0394c",

            "pgl": "#e6b52e",
            "mnk": "#e6b52e",

            "sam": "#fec983",

            "lnc": "#7789e4",
            "drg": "#7789e4",

            "arc": "#c8d88a",
            "brd": "#c8d88a",

            "rog": "#f47586",
            "nin": "#f47586",

            "acn": "#54ac12",
            "smn": "#54ac12",

            "thm": "#8e6dbd",
            "blm": "#8e6dbd",

            "rdm": "#f7bdcb",

            "mch": "#24bde5",

            "cnj": "#eaeaea",
            "whm": "#eaeaea",

            "sch": "#4845b2",

            "ast": "#e07a3a",

            "lim": "#ffcf4d",

            "cho": "#9b9b9b",

            "etc": "#666666",
        }

        document.addEventListener("onOverlayDataUpdate", function (e) {
            update(e.detail);
        });
        window.addEventListener("message", function (e) {
            if (e.data.type === "onOverlayDataUpdate") {
                update(e.data.detail);
            }
        });

        function update(data) {
            document.getElementById('encDistance').innerText = data.Enmity.Target ? (data.Enmity.Target.EffectiveDistance + " m") : "-";
        
            var table = document.getElementById('combatantTable');
            var oldTableBody = table.tBodies.namedItem('combatantTableBody');
            var newTableBody = document.createElement("tbody");
            newTableBody.id = "combatantTableBody";            
            
            var combatantIndex = 0;
            for (var entriesName in data.Enmity.Entries) {
                var entry = data.Enmity.Entries[entriesName];
                if (entry.isPet)
                    continue;
                
                var name  = entry.Name;
                var icon  = entry.JobName.toLowerCase();
                var color = entry.JobName;

                     if (name.search("요정 에오스")     != -1) { icon = "eos"; color = 'sch'; }
                else if (name.search("요정 셀레네")     != -1) { icon = "selene"; color = 'sch'; }
                else if (name.search("가루다 에기")     != -1) { icon = "garuda"; color = 'smn'; }
                else if (name.search("타이탄 에기")     != -1) { icon = "Titan"; color = 'smn'; }
                else if (name.search("이프리트 에기")   != -1) { icon = "Ifrit"; color = 'smn'; }
                else if (name.search("카벙클 에메랄드") != -1) { icon = "emerald"; color = 'acn'; }
                else if (name.search("카벙클 토파즈")   != -1) { icon = "topaz"; color = 'acn'; }
                else if (name.search("자동포탑 룩")     != -1) { icon = "look"; color = 'mch'; }
                else if (name.search("자동포탑 비숍")   != -1) { icon = "bishop"; color = 'mch'; }
                else if (name.search("리미트 브레이크") != -1) { icon = "lim"; color = 'lim'; }
                else if (name.search("Limit Break")     != -1) { icon = "lim"; color = 'lim'; }
                else if (name.search(/\)$/)             != -1) { icon = "cho"; color = 'cho'; }
                
                if (color)
                    color = color.toLowerCase();

                if (!(color in BarColors))
                    continue;

                var tableRow = newTableBody.insertRow(newTableBody.rows.length);

                var cell = tableRow.insertCell(0);
                cell.innerHTML = "<img class='jobIcon' src='./images/job/" + icon + ".png'>";
                dpsBarEffect(cell, entry, combatantIndex, color);

                cell = tableRow.insertCell(1);
                cell.style.textAlign = "left";
                cell.innerHTML = entry["Name"];

                cell = tableRow.insertCell(2);
                cell.innerText = entry["EnmityString"];

                combatantIndex++;
            }

            table.replaceChild(newTableBody, oldTableBody);
        }

        function dpsBarEffect(cell, entry, index, color) {
            if (index == 0)
                dpsBarEffect.topdeeps = parseFloat(entry["HateRate"]);

            var tableRow = cell.parentNode;
            tableRow.style.background = "-webkit-gradient(linear, left top,right top, color-stop(1," + BarColors[color] + "), to(rgba(24,24,24,0.2)))";
            tableRow.style.backgroundSize = (parseFloat(entry["HateRate"]) * 100 / parseFloat(dpsBarEffect.topdeeps)) + "% 100%";
            tableRow.style.backgroundAttachment = "fixed";
            tableRow.style.backgroundRepeat = "no-repeat";
        }
    </script>
</head>
<body>
    <div class="encounter">
        <span id="encDistance">-</span>
    </div>
    <table id="combatantTable">
        <thead class="combatantTableHeader">
            <tr>
                <th style="width: 24px;"></th>
                <th style="width: 60%;"></th>
                <th style="width: 40%;"></th>
            </tr>
        </thead>
        <tbody id="combatantTableBody">
        </tbody>
    </table>
</body>
</html>
