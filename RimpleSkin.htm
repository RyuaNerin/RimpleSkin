<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <style>
        * {
            font-family: "돋움";
            font-size: 12px;
        }
        body, html {
            margin: 0;
        }

        html {
            background-position: bottom right;
            background-repeat: no-repeat;
            box-sizing: border-box;
            height: 100%;
            overflow-x: hidden;
            background-color: rgba(0,0,0,0);
        }

        body {
            background-image: url(img/handle.png);
            background-position: bottom right;
            background-repeat: no-repeat;
        }

        .encTime{
            color: #FFbb00;
            text-shadow: -1px 0 3px #151515, 0 1px 3px #151515, 1px 0 3px #151515, 0 -1px 3px #151515;
            overflow: hidden;
			font-weight: 600;
			white-space: nowrap;
            text-overflow: ellipsis;
        }

        #encounter {
            color: #DED7BE;
            text-shadow: -1px 0 2px #795516, 0 1px 2px #795516, 1px 0 2px #795516, 0 -1px 2px #795516;
            font-weight: 300;
            white-space: nowrap;
        }

        #combatantTable {
            width: 100%;
            table-layout: fixed;
            border-collapse: collapse;
            padding: 0px;
        }

        .combatantTableHeader tr {
            border-bottom: 1px solid #0a0a0b;
        }

        #combatantTableBody {
            color: #FFFFFF;
            text-shadow: 1px 1px 0px #353535, -1px 0 2px #353535, 0 1px 2px #353535, 1px 0 2px #353535, 0 -1px 2px #353535;
            font-weight: normal;
            white-space: nowrap;
            text-overflow: clip;
            overflow: hidden;
            border-bottom: 1px solid rgba(0,0,0,0.3);
        }

        #combatantTableBody tr {
            line-height: 19px;
            text-align: center;
        }

        #combatantTableBody tr:nth-child(2n+1) {
            background-color: rgba(0,0,0,0.2);
        }

        #combatantTableBody tr:nth-child(2n) {
            background-color: rgba(0,0,0,0.6);
        }

        #combatantTableBody td {
            padding: 0 1 0 0;
        }

        .jobIcon {
            width:  16px;
            height: 16px;
        }
    </style>
    <script>

        var BarColors = {
            "Gld": "#7b9aa2",
            "Pld": "#7b9aa2",

            "Mrd": "#a91a16",
            "War": "#a91a16",

            "Drk": "#682531",

            "Pgl": "#b38915",
            "Mnk": "#b38915",

            "Lnc": "#3752d8",
            "Drg": "#3752d8",

            "Arc": "#adc551",
            "Brd": "#adc551",

            "Rog": "#ee2e48",
            "Nin": "#ee2e48",

            "Acn": "#32670b",
            "Smn": "#32670b",

            "Thm": "#674598",
            "Blm": "#674598",

            "Mch": "#148aa9",

            "Cnj": "#eaeaea",
            "Whm": "#eaeaea",

            "Sch": "#32307b",

            "Ast": "#b1561c",

            "Lim": "#ffbb00",

            "Cho": "#757575",

            "Etc": "#404040",
        }

        document.addEventListener("onOverlayDataUpdate", function (e) {
            update(e.detail);
        });
        window.addEventListener("message", function (e) {
            if (e.data.type === "onOverlayDataUpdate") {
                update(e.data.detail);
            }
        });

        function update(data) {
            document.getElementById('encounter').innerHTML = "<span class='encTime'>[" + data.Encounter.duration + "]</span> " + data.Encounter.title + " (" + data.Encounter.dps + ")";

            var table = document.getElementById('combatantTable');
            var oldTableBody = table.tBodies.namedItem('combatantTableBody');
            var newTableBody = document.createElement("tbody");
            newTableBody.id = "combatantTableBody";

            var combatantIndex = 0;
            for (var combatantName in data.Combatant) {
                var combatant = data.Combatant[combatantName];

                     if (combatantName.search("요정 에오스") != -1)     var combatantName = 'Eos';
                else if (combatantName.search("요정 셀레네") != -1)     var combatantName = 'Selene';
        　 	   else if (combatantName.search("가루다 에기") != -1)     var combatantName = 'Garuda';
                else if (combatantName.search("타이탄 에기") != -1)     var combatantName = 'Titan';
                else if (combatantName.search("이프리트 에기") != -1)   var combatantName = 'Ifrit';
                else if (combatantName.search("카벙클 에메랄드") != -1) var combatantName = 'emerald';
                else if (combatantName.search("카벙클 토파즈") != -1)   var combatantName = 'topaz';
                else if (combatantName.search("자동포탑 룩") != -1)     var combatantName = 'Look';
                else if (combatantName.search("자동포탑 비숍") != -1)   var combatantName = 'Bishop';
                else if (combatantName.search("리미트 브레이크") != -1) var combatantName = 'Limit Break';
                else if (combatantName.search("Limit Break") != -1)     var combatantName = 'Limit Break';
                else if (combatantName.search(/\)$/) != -1)             var combatantName = 'Chocobo';
                else                                                    var combatantName = 'error';

	            combatant.JobOrName = combatant.Job || combatantName;

                var tableRow = newTableBody.insertRow(newTableBody.rows.length);

                var cell = tableRow.insertCell(0);
                cell.innerHTML = "<img class='jobIcon' src='./img/job/" + combatant.JobOrName + ".png'>";
                dpsBarEffect(cell, combatant, combatantIndex);

                cell = tableRow.insertCell(1);
                cell.style.textAlign = "left";
                cell.innerText = combatant["name"];

                cell = tableRow.insertCell(2);
                cell.innerText = combatant["encdps"];
                insertDpsCommaEffect(cell);

                cell = tableRow.insertCell(3);
                cell.innerText = combatant["damage%"];

                cell = tableRow.insertCell(4);
                cell.innerText = combatant["crithit%"];

                cell = tableRow.insertCell(5);
                cell.innerText = combatant["misses"];
                Zero2BarEffect(cell);

                cell = tableRow.insertCell(6);
                cell.innerText = combatant["swings"];

                cell = tableRow.insertCell(7);
                cell.innerText = combatant["healed%"];
                BarBar2BarEffect(cell);

                cell = tableRow.insertCell(8);
                cell.innerText = combatant["deaths"];
                Zero2BarEffect(cell);

                combatantIndex++;
            }

            table.replaceChild(newTableBody, oldTableBody);
        }
        var smnPet = ["Garuda", "Ifrit", "Titan", "topaz", "emerald"];
        var schPet = ["Eos", "Selene"];
        var mchPet = ["Look", "Bishop"];

		function dpsBarEffect(cell, combatant, index) {
			var job  = combatant["Job"];
			var name = combatant["JobOrName"];

                 if (smnPet.indexOf(name) != -1) job = "Smn";
            else if (schPet.indexOf(name) != -1) job = "Sch";
            else if (mchPet.indexOf(name) != -1) job = "Mch";
            else if (name == "Chocobo")          job = "Cho";
            else if (name == "Limit Break")      job = "Cho";

            if (!(job in BarColors)) job = "Etc";

			if (index == 0) dpsBarEffect.topdeeps = parseFloat(combatant["encdps"]);

			var tableRow = cell.parentNode;
			tableRow.style.background = "-webkit-gradient(linear, left top,right top, color-stop(1," + BarColors[job] + "), to(rgba(24,24,24,0.2)))";
			tableRow.style.backgroundSize = (parseFloat(combatant["encdps"]) * 100 / parseFloat(dpsBarEffect.topdeeps)) + "% 100%";
			tableRow.style.backgroundAttachment = "fixed";
			tableRow.style.backgroundRepeat = "no-repeat";
		}
		function insertDpsCommaEffect(cell) {
			var num = parseFloat(cell.innerText);

            if (num >= 100000)
                cell.innerText = (num / 1000).toFixed(2) + 'K';
            else if (num >= 100000000)
                cell.innerText = (num / 1000000).toFixed(2) + 'M';
            else
                cell.innerText = num.toFixed(2);

			cell.innerText = cell.innerText.replace( /(\d)(?=(\d\d\d)+(?!\d))/g,'$1,');
		}
        function Zero2BarEffect(cell) {
            if (cell.innerText == "0")
                cell.innerText = "-";
        }
        function BarBar2BarEffect(cell) {
            if (cell.innerText == "--")
                cell.innerText = "-";
        }
    </script>
</head>
<body>
    <div id="encounter">
        [00:00]
    </div>

    <table id="combatantTable">
        <thead class="combatantTableHeader">
            <tr>
                <th style="width: 24px;"></th>
                <th style="width: 100%;"></th>
                <th style="width: 60px;"><img src="./img/header/dps.png"></th>
                <th style="width: 32px;"><img src="./img/header/dmgPer.png"></th>
                <th style="width: 32px;"><img src="./img/header/crit.png"></th>
                <th style="width: 24px;"><img src="./img/header/miss.png"></th>
                <th style="width: 32px;"><img src="./img/header/swing.png"></th>
                <th style="width: 24px;"><img src="./img/header/hPer.png"></th>
                <th style="width: 24px;"><img src="./img/header/die.png"></th>
            </tr>
        </thead>
        <tbody id="combatantTableBody">
        </tbody>
    </table>
</body>
</html>
